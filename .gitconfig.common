[user]
	name = Dan Stace
[push]
	default = simple
[alias]
	aa = add --all
	ad = add
	ass = add
	b = branch
	brname = rev-parse --abbrev-ref HEAD
	ca = commit --amend
	cm = commit -m
	co = checkout
	cob = checkout -b
	desc = describe
	# fixup the last commit
	f = rebase --interactive HEAD~2
	fp = push --force-with-lease
	git = !exec git
	l = log --oneline
	ls = ls-files
	# updates the timestamp of the last commit to now
	now = !git commit --amend --no-edit --date=\"$(date)\"
	# returns: <repo_name>:<branch_info>
	# branch_info is typically the current branch name, but if a rebase is in
	# progress it will be "rebase" and if a specific commit has been checked out,
	# it will display the result of git describe.
	repo = "!f() { branch=$(git brname 2> /dev/null); if [ -n \"$branch\" ] ; then if [ \"$branch\" = \"HEAD\" ] ; then if git status | grep 'rebase in progress' > /dev/null ; then branch='rebase'; else branch=$(git describe --always); fi; fi; echo $(basename $(git rev-parse --show-toplevel)):$branch; else exit 1; fi; }; f"
	rbc = rebase --continue
	rbi = rebase --interactive
	root = rebase --interactive --root
	s = status -s
	st = status
[color]
	ui = auto
[core]
	filemode = false
	autocrlf = false
	safecrlf = false
	editor = code --wait
	hooksPath = ~/.config/git/hooks
	excludesfile = ~/.config/git/.gitignore_global
[remote "origin"]
	prune = true
[fetch]
	prune = true
[pull]
	rebase = true
[gitflow]
	multi-hotfix = true
[init]
	defaultBranch = main
[diff]
	tool = vscode
[difftool "vscode"]
	cmd = code --wait --diff $LOCAL $REMOTE
[merge]
	tool = vscode
[mergetool "vscode"]
	cmd = code --wait $MERGED
